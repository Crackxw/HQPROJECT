/************************************************************************************************
	파일명 : IOnlineObject.cpp
	담당자 : 이윤석

	Map에서 사용하는 Object 전체를 관리함
************************************************************************************************/
#include <GSL.h>
#include <Main.h>
#include <OnlineWorld.h>
#include <DebugTool.h>

#include "OnlineVillage-Parser.h"
#include "OnlineObject.h"
#include "OnlinePortal-Parser.h"

//----------------------------------------------------------------------------------------------------------------
//	설명	:	생성자.
//----------------------------------------------------------------------------------------------------------------
IOnlineObject::IOnlineObject()
{
	pOnlineObject	=	NULL;
	pTempSurface    =   NULL;
}

//----------------------------------------------------------------------------------------------------------------
//	설명	:	소멸자.
//----------------------------------------------------------------------------------------------------------------
IOnlineObject::~IOnlineObject()
{
	Free();
}

//----------------------------------------------------------------------------------------------------------------
//	설명	:	초기화.															
//----------------------------------------------------------------------------------------------------------------
BOOL	IOnlineObject::Init()
{
	// Surface 만들기
	clGrp.CreateOffScreen(pTempSurface, 10, 10, FALSE, FALSE);
	if(pTempSurface == NULL) return FALSE;

	// 오브젝트의 메모리를 할당한다.
	pOnlineObject	=	new	OnlineObject[MAX_ONLINE_OBJECT];

	if(pOnlineObject)
		return TRUE;
	else
		return FALSE;
}

//----------------------------------------------------------------------------------------------------------------
//	설명	:	임시 Surface 얻기
//----------------------------------------------------------------------------------------------------------------
LPDIRECTDRAWSURFACE7	IOnlineObject::GetTempSurface(void)
{
	return pTempSurface;
}

//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
//	설명	:	오브젝트만 모두 삭제
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
VOID	IOnlineObject::FreeAll()
{
	SI16	TempCount;

	for(TempCount = 0; TempCount < MAX_ONLINE_OBJECT; TempCount++)
	{
		if(pOnlineObject[TempCount].IsInit())
		{
			pOnlineObject[TempCount].Free();
		}
	}
}

//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
//	설명	:	오브젝트 하나를 없앤다.
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
VOID	IOnlineObject::Free(SI16 siX, SI16 siY)
{
	SI16	siID;	

	siID			=	GetObjectID(siX, siY);

	if(siID == 0)
	{		
		clGrp.Error("", "IOnlineObject::Free 오브젝트를 삭제하는데 실패했습니다.\n\n (Fail to release IOnlineObject::Free.)");
	}

	pOnlineObject[siID].Free();
}

//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
//	설명	:	오브젝트 하나를 없앤다
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
VOID	IOnlineObject::Free(SI16 siID)
{
//	ASSERT2((siID > 0) && (siID < MAX_ONLINE_OBJECT), (""));
//	ASSERT((siID > 0) && (siID < MAX_ONLINE_OBJECT));

	if((siID > 0) && (siID < MAX_ONLINE_OBJECT))
		pOnlineObject[siID].Free();
}	

//----------------------------------------------------------------------------------------------------------------
//	설명	:	해제
//----------------------------------------------------------------------------------------------------------------
VOID	IOnlineObject::Free()
{
	SI32	i;

	if(pOnlineObject)
	{
		for(i = 0;i < MAX_ONLINE_OBJECT; i++)		pOnlineObject[i].Free();	

		delete [] pOnlineObject;
		pOnlineObject = NULL;
	}

	if(pTempSurface)
	{
		pTempSurface->Release();

		pTempSurface    =   NULL;
	}
}

//----------------------------------------------------------------------------------------------------------------
//	설명	:	초기화를 한다.
//----------------------------------------------------------------------------------------------------------------
SI16	IOnlineObject::Init(SI32 siKind, SI16 siX, SI16 siY, cltOnlineWorld *pWorld)
{
	SI16	siID;

	siID	=	GetEmptyID();

	if(siID)
	{		
		pOnlineObject[siID].Init(siID, siKind, siX, siY, pWorld);

		return siID;
	}
	else	
		clGrp.Error("", "IOnlineObject::Init Object 배열이 모자릅니다.\n\n (No more space IOnlineObject::Init Object.)");

	return 0;
}

//----------------------------------------------------------------------------------------------------------------
//	설명	:	오브젝트을 초기화 한다.(마을인 경우에만)
//----------------------------------------------------------------------------------------------------------------
SI16	IOnlineObject::Init(VillageHeader *pVillageHeader, cltOnlineWorld *pWorld)
{		
	SI16	siID;

	siID	=	GetEmptyID();

	if(siID)
	{
		// 제대로 된 ID를 할당 받았다.
		pOnlineObject[siID].Init(siID, pVillageHeader, pWorld);			
	}

	return siID;	
}

//----------------------------------------------------------------------------------------------------------------
//	설명	:	오브젝트을 초기화 한다.(포탈인 경우에만)
//----------------------------------------------------------------------------------------------------------------
SI16	IOnlineObject::Init(PortalHeader *pPortalHeader, cltOnlineWorld *pWorld)
{		
	SI16	siID;

	siID	=	GetEmptyID();

	if(siID)
	{
		// 제대로 된 ID를 할당 받았다.
		pOnlineObject[siID].Init(siID, pPortalHeader, pWorld);			
	}

	return siID;	
}

//----------------------------------------------------------------------------------------------------------------
//	설명	:	비어 있는 ID를 구한다.
//----------------------------------------------------------------------------------------------------------------
SI16	IOnlineObject::GetEmptyID()
{
	SI16	i;

	for(i = 1; i < MAX_ONLINE_OBJECT; i++)
	{
		if(pOnlineObject[i].IsInit() == FALSE)
			return i;
	}

	return 0;
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------
//	설명	:	오브젝트을 화면에 그린다.	
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
VOID	IOnlineObject::Draw(SI16 siID, SI16 SelectID)
{
	pOnlineObject[siID].Draw(SelectID);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------
//	설명	:	오브젝트을 화면에 Tile 방식으로 그린다.	
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
VOID	IOnlineObject::DrawTileType(SI16 siID, SI16 SelectID)
{
	pOnlineObject[siID].DrawTileType(SelectID);
}

/*
//----------------------------------------------------------------------------------------------------------------
//	설명	:	오브젝트에게 속성이 있는지 얻어온다.
//----------------------------------------------------------------------------------------------------------------
BOOL	IOnlineObject::IsAtb(SI16 siID, SI32 siAtb)
{
	return pOnlineObject[siID].IsAtb(siAtb);	
}
*/

//----------------------------------------------------------------------------------------------------------------
//	설명	:	마을이라면 종류를 얻어온다.
//----------------------------------------------------------------------------------------------------------------
SI32	IOnlineObject::GetVillageKind(SI16 siID)
{
	return pOnlineObject[siID].GetVillageKind();	
}

//----------------------------------------------------------------------------------------------------------------
//	설명	:	오브젝트의 이름을 얻어온다.
//----------------------------------------------------------------------------------------------------------------
VOID	IOnlineObject::GetName(SI16 siID, CHAR pszName[32])
{
	pOnlineObject[siID].GetName(pszName);
}

//----------------------------------------------------------------------------------------------------------------
//	설명	:	오브젝트의 설명을 얻어온다.
//----------------------------------------------------------------------------------------------------------------
CHAR	*IOnlineObject::GetMark(SI16 siID)															// 오브젝트의 설명을 얻어온다.
{
	return(pOnlineObject[siID].GetMark());
}

//----------------------------------------------------------------------------------------------------------------
//	설명	:	오브젝트이 있는 위치를 얻어온다.
//----------------------------------------------------------------------------------------------------------------
VOID	IOnlineObject::GetPos(SI16 siID, SI16 *psiX, SI16 *psiY)
{
	pOnlineObject[siID].GetPos(psiX, psiY);
}
  
//----------------------------------------------------------------------------------------------------------------
//	설명	:	오브젝트이 차지하는 영역을 얻어온다.
//----------------------------------------------------------------------------------------------------------------
VOID	IOnlineObject::GetSize(SI16 siID, SI16 *psiXsize, SI16 *psiYsize)
{
	pOnlineObject[siID].GetSize(psiXsize, psiYsize);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------
//	설명	:	마을일 경우 마을과 연결되는 화일을 얻어온다.
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
VOID	IOnlineObject::GetVillageFileName(SI16 siID, CHAR *pszVillageFileName)
{
	pOnlineObject[siID].GetVillageFileName(pszVillageFileName);
}

//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
//	설명	:	해당 위치에 심겨져 있는 오브젝트의 ID(배열중의 인덱스)를 얻어온다.
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
SI16	IOnlineObject::GetObjectID(SI16 siX, SI16 siY)
{
	SI32	i;
	SI16	siTempX, siTempY;

	for(i = 1; i < MAX_ONLINE_OBJECT; i++)
	{
		// 같은 위치의 오브젝트 배열을 찾는다.
		if(pOnlineObject[i].IsInit() == TRUE)
		{
			pOnlineObject[i].GetPos(&siTempX, &siTempY);

			if(siX == siTempX && siY == siTempY)	return i;				
		}
	}

	return 0;
}


//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
//	설명	:	버그를 잡기 위한 정보를 화일에 쓴다.
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
VOID	IOnlineObject::WriteFileForBug(CHAR *pszTitle)
{
	FILE	*fp;		
	SI32	i;

	fp = fopen("ObjectBug.txt", "at");
	
	fprintf(fp, "------------------------------------------------%s------------------------------------------\n", pszTitle);

	for(i = 1; i < MAX_ONLINE_OBJECT; i++)
	{
		// 같은 위치의 오브젝트 배열을 찾는다.
		if(pOnlineObject[i].IsInit() == TRUE)
		{
			pOnlineObject[i].WriteFileForBug(fp);
		}
	}
	fclose(fp);
}

//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
//	설명	:	종류를 얻어온다.
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
SI16	IOnlineObject::GetKind(SI16 siID)
{
	return pOnlineObject[siID].GetKind();
}
/*
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
//	설명	:	종류를 얻어온다.
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
SI32	IOnlineObject::GetKindIndex(SI16 siID)
{
	return pOnlineObject[siID].GetKindIndex();
}
*/
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
//	설명	:	오브젝트의 Action.
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
VOID	IOnlineObject::Action()
{
	SI32	i;

	for(i = 1; i < MAX_ONLINE_OBJECT; i++)
	{
		if(pOnlineObject[i].IsInit() == TRUE)
		{
			pOnlineObject[i].Action();
		}
	}
}

//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
//	설명	:	오브젝트가 포탈인지 검사한다.
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
BOOL	IOnlineObject::IsPortal(SI16 siID)
{
	return pOnlineObject[siID].IsPortal();
}

//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
//	설명	:	Portal ID를 돌려준다.
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
SI16	IOnlineObject::GetPortalID(SI16 siID)
{
	return pOnlineObject[siID].GetPortalID();
}

//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
//	설명	:	Portal Name를 돌려준다.
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
char*	IOnlineObject::GetPortalName(SI16 siID)
{
	return pOnlineObject[siID].GetPortalName();
}

//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
//	설명	:	Village ID를 돌려준다.
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
UI16	IOnlineObject::GetVillageCode(SI16 siID)
{
	return pOnlineObject[siID].GetVillageCode();
}

//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
//	설명	:	x, y 위치에 Image가 있는지 검사한다.
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
BOOL	IOnlineObject::CheckImage(SI16 siID, SI16 x, SI16 y, LPDIRECTDRAWSURFACE7 pSurface)
{
	return pOnlineObject[siID].CheckImage(x, y, pSurface);
}

//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
//	설명	:	범위내에 있지 않은 Object들을 삭제한다.
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
void	IOnlineObject::CheckZone(SI16 sx, SI16 sy, SI16 ex, SI16 ey)
{
	SI32	i;
	SI16	siTempX, siTempY;

	for(i = 0; i < MAX_ONLINE_OBJECT; i++)
	{
		// 같은 위치의 오브젝트 배열을 찾는다.
		if(pOnlineObject[i].IsInit() == TRUE)
		{
			pOnlineObject[i].GetPos(&siTempX, &siTempY);

			if((siTempX < sx) || (siTempY < sy) || (siTempX > ex) || (siTempY > ey))
			{
				pOnlineObject[i].Free();
			}
		}
	}
}

//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
//	설명	:	Village Object를 찾는다.
//━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
UI16	IOnlineObject::GetVillageObject(UI16 uiVillageCode)
{
	SI32	i;

	for(i = 1; i < MAX_ONLINE_OBJECT; i++)
	{
		if(pOnlineObject[i].IsInit())
		{
			if(pOnlineObject[i].GetVillageCode() == uiVillageCode)
			{
				return i;
			}
		}
	}

	return 0;
}
