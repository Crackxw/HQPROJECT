#include <GSL.h>
#include <main.h>
#include <clGame.h>


#include <etc.h>

#include "YOnOffControl.h"
#include "text.h"

extern	_Text 				Text;								// 텍스트 
extern	char 				SavePath[];
extern _clGame *pGame;


////////////////////////////////////////////////////////////////////////////////////////////////////////
/// _OnOffButton::_OnOffButton()
////////////////////////////////////////////////////////////////////////////////////////////////////////
_OnOffButton::_OnOffButton()
{	
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
/// _OnOffButton::~_OnOffButton()
////////////////////////////////////////////////////////////////////////////////////////////////////////
_OnOffButton::~_OnOffButton()
{		
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
/// 함수 : VOID _OnOffButton::Init(SHORT OnX, SHORT OnY, SHORT OffX, SHORT OffY, SHORT OnOffWidth, SHORT OnOffHeight)
/// 목적 : 만약 처음으로 초기화를 수행했다면 스프라이트를 로드 하고 참조 카운트를 1 증가한다.
///        그렇지 않다면  참조 카운트만 증가한다.
////////////////////////////////////////////////////////////////////////////////////////////////////////
VOID _OnOffButton::Init(SHORT OnX, SHORT OnY, SHORT OffX, SHORT OffY)
{
	strBaseSelectButtonInfo		stBaseSelectButtonInfo[2];
	
	clGrp.LoadXspr("Online\\GameSpr\\Option\\small_window_push_button.Spr", m_XSPR);

	stBaseSelectButtonInfo[0].rcButton.left		=	OnX;
	stBaseSelectButtonInfo[0].rcButton.top		=	OnY;

	stBaseSelectButtonInfo[1].rcButton.left		=	OffX;
	stBaseSelectButtonInfo[1].rcButton.top		=	OffY;

	stBaseSelectButtonInfo[0].rcButton.right	=	stBaseSelectButtonInfo[0].rcButton.left + m_XSPR.Header.Xsize;
	stBaseSelectButtonInfo[0].rcButton.bottom	=	stBaseSelectButtonInfo[0].rcButton.top  + m_XSPR.Header.Ysize;
	strcpy(stBaseSelectButtonInfo[0].szName, Text.On.Get());

	stBaseSelectButtonInfo[1].rcButton.right	=	stBaseSelectButtonInfo[1].rcButton.left + m_XSPR.Header.Xsize;
	stBaseSelectButtonInfo[1].rcButton.bottom	=	stBaseSelectButtonInfo[1].rcButton.top  + m_XSPR.Header.Ysize;
	strcpy(stBaseSelectButtonInfo[1].szName, Text.Off.Get());

	//버튼을 생성한다.
	m_BaseSelectButton.Create(2, stBaseSelectButtonInfo);
}


////////////////////////////////////////////////////////////////////////////////////////////////////////
/// 함수 : VOID _OnOffButton::Free()
/// 설명 : 이 함수를 수행할때마다 참조 카운트를 1 감소한다. 0이 되면 스프라이트를 해제 한다.
////////////////////////////////////////////////////////////////////////////////////////////////////////
VOID _OnOffButton::Free()
{	
	m_BaseSelectButton.Free();

	if(m_XSPR.Image)
	{
		clGrp.FreeXspr(m_XSPR);
		ZeroMemory(&m_XSPR, sizeof(m_XSPR));
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
/// void _OnOffButton::SetOn()
////////////////////////////////////////////////////////////////////////////////////////////////////////
void _OnOffButton::SetOn()
{
	m_nOnOff	 = ON;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
/// void _OnOffButton::SetOff()
////////////////////////////////////////////////////////////////////////////////////////////////////////
void _OnOffButton::SetOff()
{
	m_nOnOff	 = OFF;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
/// BOOL _OnOffButton::IsOn()
////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL _OnOffButton::IsOn()
{
	return (m_nOnOff == ON);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
/// BOOL _OnOffButton::IsOff()
////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL _OnOffButton::IsOff()
{
	return (m_nOnOff == OFF);		 
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
/// 함수 : VOID	_OnOffButton::Draw(SHORT FontArray[][3])
/// 목적 : 어떤 스프라이트를 찍어야 할 지 모르므로 아무것도 하지 않는다.
////////////////////////////////////////////////////////////////////////////////////////////////////////
VOID	_OnOffButton::Draw(SHORT FontArray[][3])
{
	m_BaseSelectButton.Draw(&m_XSPR, FontArray);
}

//------------------------------------------------------------------------------------------------
//	설명	:
//------------------------------------------------------------------------------------------------
VOID	_OnOffButton::Draw(HDC hdc)
{
	SI32	siSelectButton;

	if(IsOn())
	{
		siSelectButton = 0;
	}
	else
	{
		siSelectButton = 1;
	}

	m_BaseSelectButton.Draw(hdc, siSelectButton);
}


/////////////////////////////////////////////////////////////////////////////////////////////////////
/// 함수 : VOID _OnOffButton::Action(BOOL bPush)
/// 목적 : 
/////////////////////////////////////////////////////////////////////////////////////////////////////
VOID _OnOffButton::Action(BOOL bPush)
{
	SHORT	nRes;

	nRes = m_BaseSelectButton.Process(bPush);

	if(nRes != -1)	
	{
		m_nOnOff = nRes;	
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
/// 함수 : VOID _OnOffButton::SetAction(BOOL bAction)
/// 목적 : 
/////////////////////////////////////////////////////////////////////////////////////////////////////
VOID _OnOffButton::SetAction(BOOL bAction)
{
	m_BaseSelectButton.SetAction(bAction);
}


/////////////////////////////////////////CD Music On, Off///////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
/// _YCDOnOff::_YCDOnOff()
/////////////////////////////////////////////////////////////////////////////////////////////////////
_YCDOnOff::_YCDOnOff() : _OnOffButton()
{	
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
/// _YCDOnOff::~_YCDOnOff()
/////////////////////////////////////////////////////////////////////////////////////////////////////
_YCDOnOff::~_YCDOnOff()
{
	Free();	
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
/// 함수 : VOID _YCDOnOff::Init(BOOL bAction)
/// 목적 : 
/////////////////////////////////////////////////////////////////////////////////////////////////////
VOID _YCDOnOff::Init(BOOL bAction, SI16 x, SI16 y)
{
	_OnOffButton::Init(x, y, x + 61, y);

	pGame->Config.m_uiCDMusicSwitch ? SetOn() : SetOff();

	SetAction(bAction);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
/// 함수 : VOID _YCDOnOff::RefreshData()
/// 목적 : 
/////////////////////////////////////////////////////////////////////////////////////////////////////
VOID _YCDOnOff::RefreshData()
{

}

/////////////////////////////////////////////////////////////////////////////////////////////////////
/// 함수 : VOID _YCDOnOff::Draw()
/// 목적 : 
/////////////////////////////////////////////////////////////////////////////////////////////////////
void _YCDOnOff::Draw()
{
	SHORT	FontArray[2][3];

	if(IsOn() == TRUE)		
	{
		FontArray[0][0]	= 0;
		FontArray[0][1]	= 0;
		FontArray[0][2]	= 0;		
	}
	else	
	{
		FontArray[0][0] = 0;
		FontArray[0][1] = 0;
		FontArray[0][2] = 1;				
	} 

	if(IsOff() == TRUE)
	{
		FontArray[1][0]	= 0;
		FontArray[1][1]	= 0;
		FontArray[1][2]	= 0;		
	}
	else	
	{
		FontArray[1][0] = 0;
		FontArray[1][1] = 0;
		FontArray[1][2] = 1;				
	}

	_OnOffButton::Draw(FontArray);	

}

//------------------------------------------------------------------------------------------------
//	설명	:
//------------------------------------------------------------------------------------------------
VOID	_YCDOnOff::Draw(HDC hdc)
{
	_OnOffButton::Draw(hdc);
}
