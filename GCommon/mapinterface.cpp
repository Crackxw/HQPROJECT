#ifndef _ROCKET_NEW_TILE_MAP

//--------------------------------------------------------------------
//  담당 : 김태곤
//--------------------------------------------------------------------
#include <GSL.h>
#include <main.h>
#include <CharOrg.h>
#include <map.h>
#include <mapinterface.h>

extern	_Map		Map;


cltMapInterface::cltMapInterface()
{

}

//-----------------------------------------------------------------------------
// 설명 : 지도위의 캐릭터 아이디를 구한다. 
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetIDMap(SI32 siX, SI32 siY)
{
	return Map.GetIDMap(siX, siY);
}


//-----------------------------------------------------------------------------
// 설명 : 지도위의 공중 캐릭터 아이디를 구한다. 
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetSkyMap(SI32 siX, SI32 siY)
{
	return Map.GetSkyMap(siX, siY);
}


//-----------------------------------------------------------------------------
// 설명 : 실제도트좌표를 화면도트좌표로 변환한다. 
// Desc :
//-----------------------------------------------------------------------------
void cltMapInterface::TransFromRealDotToScreenDot(SHORT realx, SHORT realy, SHORT& screenx, SHORT &screeny)
{
	Map.TransFromRealDotToScreenDot(realx, realy, screenx, screeny);
}

//-----------------------------------------------------------------------------
// 설명 : 실제도트좌표를 이용하여 실제타일좌표를 구한다.
// Desc :
//-----------------------------------------------------------------------------
BOOL cltMapInterface::GetRealTileByRealDot(SHORT realx, SHORT realy, SHORT* pX, SHORT* pY)
{
	return Map.GetRealTileByRealDot(realx, realy, pX, pY);
}

//-----------------------------------------------------------------------------
// 설명 : 단위 타일의 가로 사이즈를 구한다.
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetMapTileXsize()
{
	return MAP_TILE_XSIZE;
}

//-----------------------------------------------------------------------------
// 설명 : 단위 타일의 세로 사이즈를 구한다.
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetMapTileYsize()
{
	return MAP_TILE_YSIZE;
}

//-----------------------------------------------------------------------------
// 설명 : 단위 타일의 가로 사이즈의 절반의 크기를 구한다.
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetMapTileXsizeHalf()
{
	return MAP_TILE_XSIZE_HALF;
}

//-----------------------------------------------------------------------------
// 설명 : 단위 타일의 세로 사이즈의 절반의 크기를 구한다.
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetMapTileYsizeHalf()
{
	return MAP_TILE_YSIZE_HALF;
}


//-----------------------------------------------------------------------------
// 설명 : 화면을 나눈 조각의 가로 갯수를 구한다. 
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetMaxDrawMapScreenXsize() 
{
	return MAX_DRAWMAP_SCREEN_XSIZE;
}

//-----------------------------------------------------------------------------
// 설명 : 화면을 나눈 조각의 세로 갯수를 구한다. 
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetMaxDrawMapScreenYsize() 
{
	return MAX_DRAWMAP_SCREEN_YSIZE;
}
/*
//-----------------------------------------------------------------------------
// 설명 : x, y 좌표가 어느 섹터에 포함되는가?
// Desc :
//-----------------------------------------------------------------------------
SHORT cltMapInterface::GetSector(SHORT x, SHORT y)
{
	return Map.GetSector(x, y);
}
*/

//-----------------------------------------------------------------------------
// 설명 : virtual position을 설정한다. 
// Desc :
//-----------------------------------------------------------------------------
void cltMapInterface::SetVirtualPos(SI16 siX, SI16 siY)
{
	Map.SetVirtualPos(siX, siY);
}

//-----------------------------------------------------------------------------
// 설명 : 강제로 화면을 갱신하는지 여부를 설정한다. 
// Desc :
//-----------------------------------------------------------------------------
void cltMapInterface::SetDrawForceSwitch(BOOL bMode)
{
	Map.DrawForceSwitch = bMode;
}


//-----------------------------------------------------------------------------
// 설명 : x, y가 지도 범위 안에 들어 있는지 확인한다.
// Desc :
//-----------------------------------------------------------------------------
BOOL cltMapInterface::IsInMapArea(SI16 siX, SI16 siY)
{
	return Map.IsInMapArea(siX, siY);
}

//-----------------------------------------------------------------------------
// 설명 : x, y가 화면 범위 안에 들어 있는지 확인한다.
// Desc :
//-----------------------------------------------------------------------------
BOOL cltMapInterface::IsInScreen(SI16 siX, SI16 siY)
{
	return Map.IsInScreen(siX, siY);
}



//-----------------------------------------------------------------------------
// 설명 : siX, siY가 비어있는 곳인지 확인한다. 
// Desc :
//-----------------------------------------------------------------------------
BOOL cltMapInterface::IsEmpty(SI16 siX, SI16 siY)
{
	return Map.IsEmpty(siX, siY);
}


//-----------------------------------------------------------------------------
// 설명 : siX, siY의 곡물 종류를 알아낸다. 
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetCropTypeMap(SI16 siX, SI16 siY)
{
	return Map.GetCropTypeMap(siX, siY);
}

//-----------------------------------------------------------------------------
// 설명 : siX, siY에 곡물을 심는다. 
// Desc :
//-----------------------------------------------------------------------------
VOID cltMapInterface::PutCrop(SHORT x, SHORT y, SHORT type, SHORT vary, SHORT mount)
{
	Map.PutCrop(x, y, type, vary, mount);
}

//-----------------------------------------------------------------------------
// 설명 : 지도의 가로 크기를 알아낸다. 
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetXsize()
{
	return Map.GetXsize();
}
//-----------------------------------------------------------------------------
// 설명 : 지도의 세로 크기를 알아낸다. 
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetYsize()
{
	return Map.GetYsize();
}

//-----------------------------------------------------------------------------
// 설명 : siX, siY 좌표의 지형이 육지인지 확인한다. 
// Desc :
//-----------------------------------------------------------------------------
BOOL cltMapInterface::IsLand(SI16 siX, SI16 siY)
{
	return Map.IsLand(siX, siY);
}

//-----------------------------------------------------------------------------
// 설명 : siX, siY 좌표의 NewBlkMode값을 구한다. 
// Desc :
//-----------------------------------------------------------------------------
UI08 cltMapInterface::GetNewBlkMode(SI16 siX, SI16 siY)
{
    return Map.GetNewBlkMode(siX, siY);
}

//-----------------------------------------------------------------------------
// 설명 : siX, siY 좌표의 LevelMode값을 구한다. 
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetLevelInfo(SI16 siX, SI16 siY)
{
	return Map.GetLevelInfo(siX, siY);
}

//-----------------------------------------------------------------------------
// 설명 : 지도의 타일 종류를 구한다. 
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetMapType()
{
	return Map.MH.MapType;

}

//-----------------------------------------------------------------------------
// 설명 : 지도의 타일을 초기화한다. 
// Desc :
//-----------------------------------------------------------------------------
void cltMapInterface::InitTile()
{
    Map.InitTile();
}


//-----------------------------------------------------------------------------
// 설명 : 지도의 최대 플레이어 수를 구한다. 
// Desc :
//-----------------------------------------------------------------------------
SHORT  cltMapInterface::GetPlayerNumberOfMap(char* filename)
{
	return ::GetPlayerNumberOfMap(filename);
}

//-----------------------------------------------------------------------------
// 설명 : 특정 지역이 충돌 영역인지 확인한다. 
// Desc :
//-----------------------------------------------------------------------------
BOOL cltMapInterface::IsColl(SI16 siX, SI16 siY, SI16 siBlock)
{
	return Map.IsColl(siX, siY, siBlock);
}

//-----------------------------------------------------------------------------
// 설명 : 특정 절대타일단위좌표의 중심지점을 절대도트단위 좌표로 변환해 준다. 
// Desc :
//-----------------------------------------------------------------------------
BOOL cltMapInterface::GetRealDotCenterXY(SI16 siX, SI16 siY, int & centerx, int & centery)
{
	return Map.GetRealDotCenterXY(siX,siY,  centerx, centery);
}


//-----------------------------------------------------------------------------
// 설명 : 특정 지역의 얕은 물 상태를 알려준다. 
// Desc :
//-----------------------------------------------------------------------------
UI08 cltMapInterface::GetShallowMap(SI16 siX, SI16 siY)
{
	return Map.GetShallowMap(siX, siY);
}


//-----------------------------------------------------------------------------
// 설명 : 특정 지역에 불을 붙인다.
// Desc :
//-----------------------------------------------------------------------------
void cltMapInterface::PutFire(SI32 siX, SI32 siY, SI32 siFireType, SI32 siLifeTime,_NewID siChar,SI16 siPlayer)
{
	Map.PutFire(siX, siY, siFireType, siLifeTime,siChar,siPlayer);
}

//-----------------------------------------------------------------------------
// 설명 : 특정 플레이어의 특정 종류 캐릭터가 지도 상에 생산가능한가 ?
// Desc :
//-----------------------------------------------------------------------------
BOOL cltMapInterface::IsCharInGame(SI32 playernumber, SI32 kind)
{
	return Map.clMapPlayerInfo[playernumber].IsCharInGame[kind];
}



#else
//--------------------------------------------------------------------
//  담당 : 김태곤
//--------------------------------------------------------------------
#include <GSL.h>
#include <main.h>
#include <CharOrg.h>
#include <map.h>
#include <mapinterface.h>

extern	_Map		Map;


cltMapInterface::cltMapInterface()
{

}

//-----------------------------------------------------------------------------
// 설명 : 지도위의 캐릭터 아이디를 구한다. 
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetIDMap(SI32 siX, SI32 siY)
{
	return Map.GetIDMap(siX, siY);
}


//-----------------------------------------------------------------------------
// 설명 : 지도위의 공중 캐릭터 아이디를 구한다. 
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetSkyMap(SI32 siX, SI32 siY)
{
	return Map.GetSkyMap(siX, siY);
}


//-----------------------------------------------------------------------------
// 설명 : 실제도트좌표를 화면도트좌표로 변환한다. 
// Desc :
//-----------------------------------------------------------------------------
void cltMapInterface::TransFromRealDotToScreenDot(SHORT realx, SHORT realy, SHORT& screenx, SHORT &screeny)
{
	Map.TransFromRealDotToScreenDot(realx, realy, screenx, screeny);
}

//-----------------------------------------------------------------------------
// 설명 : 실제도트좌표를 이용하여 실제타일좌표를 구한다.
// Desc :
//-----------------------------------------------------------------------------
BOOL cltMapInterface::GetRealTileByRealDot(SHORT realx, SHORT realy, SHORT* pX, SHORT* pY)
{
	return Map.GetRealTileByRealDot(realx, realy, pX, pY);
}

//-----------------------------------------------------------------------------
// 설명 : 단위 타일의 가로 사이즈를 구한다.
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetMapTileXsize()
{
	return MAP_TILE_XSIZE;
}

//-----------------------------------------------------------------------------
// 설명 : 단위 타일의 세로 사이즈를 구한다.
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetMapTileYsize()
{
	return MAP_TILE_YSIZE;
}

//-----------------------------------------------------------------------------
// 설명 : 단위 타일의 가로 사이즈의 절반의 크기를 구한다.
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetMapTileXsizeHalf()
{
	return MAP_TILE_XSIZE_HALF;
}

//-----------------------------------------------------------------------------
// 설명 : 단위 타일의 세로 사이즈의 절반의 크기를 구한다.
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetMapTileYsizeHalf()
{
	return MAP_TILE_YSIZE_HALF;
}


//-----------------------------------------------------------------------------
// 설명 : 화면을 나눈 조각의 가로 갯수를 구한다. 
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetMaxDrawMapScreenXsize() 
{
	return MAX_DRAWMAP_SCREEN_XSIZE;
}

//-----------------------------------------------------------------------------
// 설명 : 화면을 나눈 조각의 세로 갯수를 구한다. 
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetMaxDrawMapScreenYsize() 
{
	return MAX_DRAWMAP_SCREEN_YSIZE;
}
/*
//-----------------------------------------------------------------------------
// 설명 : x, y 좌표가 어느 섹터에 포함되는가?
// Desc :
//-----------------------------------------------------------------------------
SHORT cltMapInterface::GetSector(SHORT x, SHORT y)
{
	return Map.GetSector(x, y);
}
*/

//-----------------------------------------------------------------------------
// 설명 : virtual position을 설정한다. 
// Desc :
//-----------------------------------------------------------------------------
void cltMapInterface::SetVirtualPos(SI16 siX, SI16 siY)
{
	Map.SetVirtualPos(siX, siY);
}

//-----------------------------------------------------------------------------
// 설명 : 강제로 화면을 갱신하는지 여부를 설정한다. 
// Desc :
//-----------------------------------------------------------------------------
void cltMapInterface::SetDrawForceSwitch(BOOL bMode)
{
	Map.DrawForceSwitch = bMode;
}


//-----------------------------------------------------------------------------
// 설명 : x, y가 지도 범위 안에 들어 있는지 확인한다.
// Desc :
//-----------------------------------------------------------------------------
BOOL cltMapInterface::IsInMapArea(SI16 siX, SI16 siY)
{
	return Map.IsInMapArea(siX, siY);
}

//-----------------------------------------------------------------------------
// 설명 : x, y가 화면 범위 안에 들어 있는지 확인한다.
// Desc :
//-----------------------------------------------------------------------------
BOOL cltMapInterface::IsInScreen(SI16 siX, SI16 siY)
{
	return Map.IsInScreen(siX, siY);
}



//-----------------------------------------------------------------------------
// 설명 : siX, siY가 비어있는 곳인지 확인한다. 
// Desc :
//-----------------------------------------------------------------------------
BOOL cltMapInterface::IsEmpty(SI16 siX, SI16 siY)
{
	return Map.IsEmpty(siX, siY);
}


//-----------------------------------------------------------------------------
// 설명 : siX, siY의 곡물 종류를 알아낸다. 
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetCropTypeMap(SI16 siX, SI16 siY)
{
	return Map.GetCropTypeMap(siX, siY);
}

//-----------------------------------------------------------------------------
// 설명 : siX, siY에 곡물을 심는다. 
// Desc :
//-----------------------------------------------------------------------------
VOID cltMapInterface::PutCrop(SHORT x, SHORT y, SHORT type, SHORT vary, SHORT mount, SHORT TreeType)
{
	Map.PutCrop(x, y, type, vary, mount, TreeType);
}

//-----------------------------------------------------------------------------
// 설명 : 지도의 가로 크기를 알아낸다. 
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetXsize()
{
	return Map.GetXsize();
}
//-----------------------------------------------------------------------------
// 설명 : 지도의 세로 크기를 알아낸다. 
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetYsize()
{
	return Map.GetYsize();
}

//-----------------------------------------------------------------------------
// 설명 : siX, siY 좌표의 지형이 육지인지 확인한다. 
// Desc :
//-----------------------------------------------------------------------------
BOOL cltMapInterface::IsLand(SI16 siX, SI16 siY)
{
	return Map.IsLand(siX, siY);
}

//-----------------------------------------------------------------------------
// 설명 : siX, siY 좌표의 NewBlkMode값을 구한다. 
// Desc :
//-----------------------------------------------------------------------------
UI08 cltMapInterface::GetNewBlkMode(SI16 siX, SI16 siY)
{
    return Map.GetNewBlkMode(siX, siY);
}

//-----------------------------------------------------------------------------
// 설명 : siX, siY 좌표의 LevelMode값을 구한다. 
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetLevelInfo(SI16 siX, SI16 siY)
{
	return Map.GetLevelInfo(siX, siY);
}

//-----------------------------------------------------------------------------
// 설명 : 지도의 타일 종류를 구한다. 
// Desc :
//-----------------------------------------------------------------------------
SI16 cltMapInterface::GetMapType()
{
	return Map.MH.MapType;

}

//-----------------------------------------------------------------------------
// 설명 : 지도의 타일을 초기화한다. 
// Desc :
//-----------------------------------------------------------------------------
void cltMapInterface::InitTile()
{
    Map.InitTile();
}


//-----------------------------------------------------------------------------
// 설명 : 지도의 최대 플레이어 수를 구한다. 
// Desc :
//-----------------------------------------------------------------------------
SHORT  cltMapInterface::GetPlayerNumberOfMap(char* filename)
{
	return ::GetPlayerNumberOfMap(filename);
}

//-----------------------------------------------------------------------------
// 설명 : 특정 지역이 충돌 영역인지 확인한다. 
// Desc :
//-----------------------------------------------------------------------------
BOOL cltMapInterface::IsColl(SI16 siX, SI16 siY, SI16 siBlock)
{
	return Map.IsColl(siX, siY, siBlock);
}

//-----------------------------------------------------------------------------
// 설명 : 특정 절대타일단위좌표의 중심지점을 절대도트단위 좌표로 변환해 준다. 
// Desc :
//-----------------------------------------------------------------------------
BOOL cltMapInterface::GetRealDotCenterXY(SI16 siX, SI16 siY, int & centerx, int & centery)
{
	return Map.GetRealDotCenterXY(siX,siY,  centerx, centery);
}


//-----------------------------------------------------------------------------
// 설명 : 특정 지역의 얕은 물 상태를 알려준다. 
// Desc :
//-----------------------------------------------------------------------------
UI08 cltMapInterface::GetShallowMap(SI16 siX, SI16 siY)
{
	return Map.GetShallowMap(siX, siY);
}


//-----------------------------------------------------------------------------
// 설명 : 특정 지역에 불을 붙인다.
// Desc :
//-----------------------------------------------------------------------------
void cltMapInterface::PutFire(SI32 siX, SI32 siY, SI32 siFireType, SI32 siLifeTime,_NewID siChar,SI16 siPlayer)
{
	Map.PutFire(siX, siY, siFireType, siLifeTime,siChar,siPlayer);
}

//-----------------------------------------------------------------------------
// 설명 : 특정 플레이어의 특정 종류 캐릭터가 지도 상에 생산가능한가 ?
// Desc :
//-----------------------------------------------------------------------------
BOOL cltMapInterface::IsCharInGame(SI32 playernumber, SI32 kind)
{
	return Map.clMapPlayerInfo[playernumber].IsCharInGame[kind];
}
#endif