// Created by Microsoft (R) C/C++ Compiler Version 12.00.8168.0 (0bac8614).
//
// d:\server\hqproject\authserver\debug\GD2sAAA.tli
//
// Wrapper implementations for Win32 type library Debug/GD2sAAA.dll
// compiler-generated file created 01/15/04 at 19:25:16 - DO NOT EDIT!

#pragma once

//
// interface _Authentication wrapper method implementations
//

inline short _Authentication::ServiceAuth ( _bstr_t strServiceAccount, _bstr_t strServicePassword, _bstr_t strSerialNumber, _bstr_t strIPAddress, _bstr_t strType, VARIANT * strDescription ) {
    short _result;
    HRESULT _hr = raw_ServiceAuth(strServiceAccount, strServicePassword, strSerialNumber, strIPAddress, strType, strDescription, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _Management wrapper method implementations
//

inline short _Management::ServiceAllLogout ( _bstr_t strSerialNumber, _bstr_t strLogoutTime ) {
    short _result;
    HRESULT _hr = raw_ServiceAllLogout(strSerialNumber, strLogoutTime, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

inline short _Management::ChangeServiceFlagStatus ( _bstr_t strSerialNumber, short intFlagNumber, _bstr_t strFlagChangeTo ) {
    short _result;
    HRESULT _hr = raw_ChangeServiceFlagStatus(strSerialNumber, intFlagNumber, strFlagChangeTo, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _Accounting wrapper method implementations
//

inline short _Accounting::ServiceAccounting ( _bstr_t strServiceAccount, _bstr_t strSerialNumber, _bstr_t strType, _bstr_t strLoginTime, _bstr_t strLogoutTime, _bstr_t strIPAddress, VARIANT * strDescription ) {
    short _result;
    HRESULT _hr = raw_ServiceAccounting(strServiceAccount, strSerialNumber, strType, strLoginTime, strLogoutTime, strIPAddress, strDescription, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _Authorization wrapper method implementations
//

inline short _Authorization::ServiceAuth ( _bstr_t strServiceAccount, _bstr_t strSerialNumber, _bstr_t strIPAddress, _bstr_t strType, VARIANT * strDescription ) {
    short _result;
    HRESULT _hr = raw_ServiceAuth(strServiceAccount, strSerialNumber, strIPAddress, strType, strDescription, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}
